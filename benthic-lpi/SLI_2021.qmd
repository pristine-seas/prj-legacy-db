---
title: "Benthic Cover - Line point intercept"
number-sections: false
date: today
format: 
  docx:
    self-contained: true
    code-fold: true
    toc: true
    toc-location: right
---

```{r, message = F, warning = F, fig.width = 10, fig.height = 10, echo = F}
library(paletteer)
library(sf)
library(bigrquery)
library(gt)
library(pointblank)
library(tidyverse)
library(PristineSeasR)
library(mapview)
library(highcharter)

knitr::opts_chunk$set(eval = F, warning = F, message = F, include = F, echo = F)

PristineSeasR::set_ps_paths(email = "marine.data.science@ngs.org")

exp_id <- "SLI_2021"

exp_path <- file.path(ps_science_path, "expeditions", "SLI-2023")

ps_data_path <- file.path(ps_science_path, "datasets/")

bigrquery::bq_auth(email = "marine.data.science@ngs.org")

bq_connection <- DBI::dbConnect(bigrquery::bigquery(), 
                                project = "pristine-seas")

prj_path <- file.path(ps_science_path, "projects", "prj-SLI-manuscript")

legacy_db_path <- file.path(ps_science_path, 
                            "legacy data/Line_is/southern_line_islands/SLI2021",
                            "Benthic")
```

# 1. Main BQ tables

## 1.1 Stations

```{r wrangle}
exp_id <- "SLI_2021"

transects <- readxl::read_xlsx(file.path(legacy_db_path, 
                                     "Benthic_Kike/SLI_transects.xlsx"), 
                           sheet = "rough data",  n_max = 3, col_names = F) |> 
  janitor::clean_names() |> 
  column_to_rownames(var = "x1") %>% 
  t() %>% 
  as_tibble() |> 
  remove_rownames() |> 
  janitor::clean_names() |> 
  mutate(sample = as.numeric(sample),
         depth = as.numeric(depth)) |> 
  rename(location = island,
         depth_m = depth) |> 
  mutate(dive_id = paste0("SLI_2021_dive_", 
                          formatC(sample, width = 2, flag = 0)),
         depth_strata = case_when(depth_m <= 5 ~ "Supershallow",
                                  depth_m <= 15 ~ "Shallow",
                                  depth_m > 15 ~ "Deep")) |> 
  group_by(dive_id) |> 
  mutate(transect = LETTERS[row_number()]) |> 
  ungroup() |> 
  mutate(expedition_id = exp_id,
         site_id = str_replace(dive_id,  "dive", "lpi"),
         station_id = paste(site_id, str_to_lower(depth_strata), sep = "_"),
         transect_id = paste(station_id, "KB", transect, sep = "_")) |> 
  select(expedition_id, location, site_id, station_id, transect_id, depth_m, depth_strata, transect, dive_id) 

# Tape length is usually 50 meters broken into 5, 10m chunks. 

stations <- transects |> 
  group_by(expedition_id, site_id, station_id, depth_strata, depth_m, dive_id) |> 
  summarize(total_survey_length = 50,
            n_transects = n_distinct(transect_id))

# add site meta from fish table

fish_sites <- tbl(bq_connection, "fish_surveys.stations") |> 
  filter(expedition_id == "SLI_2021") |> 
  select(-site_id, -station_id, -method, -depth_m, -depth_strata, -diver, -n_transects, 
         -total_survey_length, -total_survey_length, -description) |> 
  collect()

stations <- stations |> 
  left_join(distinct(fish_sites)) |> 
  mutate(method = "Benthos LPI") |> 
  select(expedition_id, country, method, site_id, station_id, dive_id, latitude, longitude, location,
         alternative_site_ids, depth_m, depth_strata, habitat_type, exposure, date, time, 
         total_survey_length, n_transects) |> 
  ungroup()
```

```{r stations_map}
#| label: fig-meta-map
#| fig-cap: "Location of fish surveys"
tmp <- stations |> 
  filter(!is.na(latitude)) |> 
  st_as_sf(coords = c("longitude", "latitude"), crs = 4326) |> 
  group_by(method, site_id, location, habitat_type, exposure) |> 
  summarize(strata = paste0(depth_m, "m",collapse = ", "))

mapview::mapview(tmp,
                 zcol = c(exposure = "exposure"), 
                 legend = TRUE,
                 col.regions = PristineSeasR::ps_pal(palette = "exposure", 3),
                 map.types = c("Esri.WorldImagery"),
                 layer.name = "exposure",
                 popup = leafpop::popupTable(tmp,
                                             zcol = c("method",
                                                      "site_id",
                                                      "location",
                                                      "habitat_type",
                                                      "exposure", 
                                                      "strata")))
```

```{r stations_table}
#| label: tbl-meta
#| tbl-cap: Summary of work by island and exposure
#| tbl-cap-location: top
stations |> 
  group_by(location, exposure, habitat_type) |> 
  summarize(n_sites = n_distinct(site_id),
            n_stations = n_distinct(station_id),
            n_transects = sum(n_transects),
            total_survey_length = sum(total_survey_length)) |> 
  ungroup() |> 
  group_by(location) |> 
  gt::gt(rowname_col = "habitat_type", groupname_col = "location") |> 
  summary_rows(columns  = contains(c("n_", "_m")),
               fns = list(list(label = md("*Total*"), fn = "sum")),
               fmt = ~ fmt_number(., decimals = 0, use_seps = FALSE)) |> 
  grand_summary_rows(columns  = contains(c("n_", "_m")),
                     fns = list(list(label = md("**Grand total**"), fn = "sum")),
                     fmt = ~ fmt_number(., decimals = 0, use_seps = FALSE)) |> 
  tab_header(title = "Number of fish surveys per location, habitat, and exposure") |>
  opt_align_table_header(align = "left") |> 
  tab_style(locations = cells_summary(),
            style = cell_fill(color = "lightblue" |> adjust_luminance(steps = +1))) |> 
  tab_style(locations = cells_grand_summary(),
            style = cell_fill(color = "lightblue" |> adjust_luminance(steps = +2))) |> 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_row_groups()) |> 
  tab_options(ihtml.use_compact_mode = TRUE,
              data_row.padding = px(5)) |> 
  cols_label_with(fn = ~str_replace(.x, "n_", "# ") |> 
                    str_to_title()) |> 
  cols_label("total_survey_length" ~ "Surveyed distance (m)")
```

```{r stations_to_bq}
# Upload the new data to the existing table

```

## 1.2 Observations 

```{r wrangle_obs}
lpi_data <- readxl::read_xlsx(file.path(legacy_db_path, 
                                     "Benthic_Kike/SLI_transects.xlsx"),
                             col_names = F, range = "B6:FP28") |> 
  set_names(c("taxon", transects$transect_id)) |> 
  pivot_longer(!taxon, values_to = "n_pts", names_to = "transect_id") |> 
  replace_na(list(n_pts = 0)) |> 
  group_by(transect_id, taxon) |> 
  summarize(n_pts = sum(n_pts)) |> 
  ungroup() |> 
  group_by(transect_id) |> 
  mutate(p_cover = round(100*n_pts/sum(n_pts),2)) |> 
  ungroup() 

lpi_func_groups <- readxl::read_xlsx(file.path(legacy_db_path, 
                                     "Benthic_Kike/SLI_transects.xlsx"),
                                 sheet = "FUNCTIONAL GROUPS",
                             range = "A19:B42") |> 
  janitor::clean_names() |> 
  rename(taxon = taxa) |> 
  mutate(functional_group =  str_to_sentence(functional_group)) |> 
  rename(func_group = functional_group)

lpi_data <- lpi_data |> 
  left_join(lpi_func_groups)

empty_taxa <- lpi_data |> 
  group_by(taxon) |> 
  summarise(n_pts = mean(n_pts)) |> 
  filter(n_pts == 0) |> 
  pull(taxon)

lpi_data <- lpi_data |> 
  filter(!taxon %in% empty_taxa) 

lpi_data |> 
  group_by(transect_id) |> 
  summarise(n_pts = sum(n_pts),
            p_cover = sum(p_cover)) |> 
  filter(n_pts != 50 | p_cover != 100)

lpi_data <- lpi_data |> 
  left_join(transects |> select(transect_id, station_id, location, depth_m)) |> 
  select(location, station_id, depth_m, everything()) |> 
  mutate(func_group = case_when(taxon == "Lobophora variegata enc." ~"CRUSTOSE ALGAE NON CCA (CA)",
                                taxon == "Peyssonnelia conchicola" ~"CALCAREOUS CRUSTOSE ALGAE (CCA)",
                                taxon == "Didemnum sp. white" ~"OTHER INVERTS",
                                taxon == "Soft coral" ~ "Soft coral",
                                TRUE ~ func_group))

lpi_data |> 
  filter(is.na(func_group)) |> 
  distinct(taxon)

cover_by_station_and_group <- lpi_data |> 
  mutate(func_group = str_to_lower(func_group)) |> 
  group_by(location, station_id, depth_m, func_group) |> 
  summarize(n_pts = sum(n_pts)) |> 
  ungroup() |> 
  group_by(location, station_id) |> 
  mutate(p_cover = round(100*n_pts/sum(n_pts, na.rm = T), 2)) |> 
  left_join(stations |> select(station_id, location, exposure, habitat_type)) |>
  select(location, station_id, depth_m, exposure, habitat_type, everything())

write_csv(cover_by_station_and_group, 
          file.path(exp_path, "data/primary/processed/benthic_lpi_cover_by_group_2021.csv"))
```

```{r}
cover_by_station_and_group |> 
  group_by(location, func_group) |> 
  summarise(mean_cover = mean(p_cover),
            std_cover = sd(p_cover)) |> 
  mutate_if(is.numeric,round,2) |> 
  unite("mean_cover", c("mean_cover", "std_cover"), sep = " Â± ") |> 
  pivot_wider(names_from = location, values_from = mean_cover) 
```

```{r}
cover_by_station_and_group |> 
  group_by(location, func_group) |> 
  summarise(avg_cover = mean(p_cover),
            std_cover = sd(p_cover)) |> 
  ungroup() |> 
  ggplot()+
  geom_col(aes(x = location, y = avg_cover, fill = fct_reorder(func_group, avg_cover)))+
  labs(fill = "", y = "Mean % cover", x = "")+
  ggthemes::theme_hc()+
  scale_fill_manual(values = c("bacterial/algal/fungus complex" = "red",
                               "barren" = "grey",
                               "calcareous crustose algae (cca)" = "pink", 
                               "crustose algae non cca (ca)" = "orange",
                               "cyano" = "cyan",
                               "erect algae" = "green",
                               "hard coral" = "blue",
                               "soft coral" = "lightblue",
                               "turf" = "darkgreen",
                               "other inverts" = "black"))

ggsave(file.path(prj_path, "figures/benthic_lpi_cover_by_group_2021.pdf"), width = 10)
```

### Swap hard corals

```{r hc_data}
flint_transects <- transects$transect_id[transects$location == "Flint"]

flint_coral_data <- readxl::read_xlsx(file.path(legacy_db_path, 
                                                "Benthic_EKB/Benthos_Corals_SLI.xlsx"), 
                                      sheet = "Flint_Abundance",
                                      skip = 6, 
                                      col_names = F, 
                                      range = "A7:AO23") |> 
  janitor::clean_names() |> 
  set_names(c("taxon", flint_transects)) |> 
  pivot_longer(!taxon, values_to = "n_pts", names_to = "transect_id") |> 
  replace_na(list(n_pts = 0)) |> 
  group_by(transect_id, taxon) |> 
  summarize(n_pts = sum(n_pts)) |> 
  ungroup()

mill_sites <- transects$transect_id[transects$location == "Millenium"]

millenium_coral_data <- readxl::read_xlsx(file.path(legacy_db_path, 
                                                "Benthic_EKB/Benthos_Corals_SLI.xlsx"), 
                                      sheet = "Millenium_Abundance",
                                      skip = 6, 
                                      col_names = F, 
                                      range = "A7:CM30") %>% 
  set_names(c("taxon", mill_sites)) |> 
  pivot_longer(!taxon, values_to = "n_pts", names_to = "transect_id") |> 
  replace_na(list(n_pts = 0)) |> 
  group_by(transect_id, taxon) |> 
  summarize(n_pts = sum(n_pts)) |> 
  ungroup()

vostok_sites <- transects$transect_id[transects$location == "Vostok"] 

vostok_coral_data <- readxl::read_xlsx(file.path(legacy_db_path, 
                                                "Benthic_EKB/Benthos_Corals_SLI.xlsx"), 
                                      sheet = "Vostok_Abundance",
                                      skip = 6, 
                                      col_names = F, 
                                      range = "A7:AO29") %>% 
  set_names(c("taxon", vostok_sites)) |> 
  pivot_longer(!taxon, values_to = "n_pts", names_to = "transect_id") |> 
  replace_na(list(n_pts = 0)) |> 
  group_by(transect_id, taxon) |> 
  summarize(n_pts = sum(n_pts, na.rm = T)) |> 
  ungroup()

coral_LPI <- bind_rows(vostok_coral_data, 
                            millenium_coral_data, 
                            flint_coral_data) |> 
  arrange(transect_id) |> 
  ungroup() |> 
  mutate(func_group = "Hard coral")

empty_corals <- coral_LPI |> 
  group_by(taxon) |> 
  summarise(n_pts = mean(n_pts)) |> 
  filter(n_pts == 0) |> 
  pull(taxon)

coral_LPI <- coral_LPI |> 
  filter(!taxon %in% empty_corals) |> 
  left_join(transects |> select(transect_id, station_id, location, depth_m)) |> 
  select(location, station_id, depth_m, everything())
```

```{r hc_factors}
hc_factors <- coral_LPI |> 
  group_by(transect_id) |> 
  summarize(Eric_pts = sum(n_pts)) |> 
  left_join(lpi_data |> 
              filter(taxon == "Hard coral") |> 
              group_by(transect_id) |> 
              summarize(Kike_pts = sum(n_pts))) |> 
  mutate(hc_factor = Kike_pts/Eric_pts)

hc_factors |> 
  ggplot()+
  geom_point(aes(x = Eric_pts, y = Kike_pts))+
  geom_abline(intercept = 0, slope = 1)
```

```{r hc_sawp}
full_lpi <- coral_LPI |> 
  left_join(hc_factors) |> 
  mutate(n_pts = n_pts*hc_factor) |> 
  select(location, station_id, depth_m, transect_id, func_group, taxon, n_pts) |> 
  bind_rows(lpi_data |> 
              filter(taxon != 'Hard coral')) |> 
  ungroup() |> 
  group_by(transect_id) |> 
  mutate(p_cover = round(100*n_pts/sum(n_pts),2)) |> 
  ungroup() |> 
  mutate_if(is.numeric, round, 2)
```

```{r}
cover_by_station_and_taxa <- full_lpi |> 
  group_by(location, station_id, depth_m, func_group, taxon) |> 
  summarize(n_pts = sum(n_pts)) |> 
  ungroup() |> 
  group_by(location, station_id) |> 
  mutate(p_cover = round(100*n_pts/sum(n_pts, na.rm = T), 2)) |> 
  left_join(stations |> select(station_id, location, exposure, habitat_type)) |>
  select(location, station_id, depth_m, exposure, habitat_type, everything())

write_csv(cover_by_station_and_taxa, 
          file.path(exp_path, "data/primary/processed/benthic_lpi_cover_by_taxa_2021.csv"))
```

```{r}
create_family_pal <- function(col, n){
  
  col <- unique(col)
  
  foo <- scales::colour_ramp(c(adjust_luminance(color = col, steps = +2),
                      adjust_luminance(color = col, steps = -.5)))
  
  foo(seq(0, 1, length = n))
}

taxa_colors <- cover_by_station_and_taxa |> 
  group_by(func_group, taxon) |> 
  summarize(n_pts = sum(n_pts)) |> 
  ungroup() |> 
  mutate(color_fam = highcharter::colorize(func_group, 
                              paletteer_d("MoMAColors::Klein", n = 8))) |> 
  mutate(color_fam = case_when(func_group == "Calcareous crustose algae (cca)" ~ "#FFACC7",
                               func_group == "Barren" ~ "black",
                               TRUE ~ color_fam)) |> 
  arrange(desc(func_group), desc(n_pts)) |> 
  group_by(func_group) |> 
  mutate(n_taxa = n_distinct(taxon),
         color_sp = highcharter::colorize(taxon,
                                          colors = create_family_pal(col = color_fam, 
                                                                     n = n_taxa))) |> 
  ungroup()

tmp <- cover_by_station_and_taxa |> 
  group_by(location, taxon) |>
  summarise(avg_cover = mean(p_cover),
            std_cover = sd(p_cover)) |>
  left_join(taxa_colors) |> 
  arrange(desc(avg_cover))
  
color_map <- setNames(tmp$color_sp, tmp$taxon)

ggplot(tmp)+
  geom_col(aes(x = location, y = avg_cover, 
               fill = fct_reorder(taxon, avg_cover)))+
  scale_fill_manual(values = color_map) +
  ggthemes::theme_hc()+
  theme(legend.position = "right")+
  guides(fill = guide_legend(ncol = 2, reverse = TRUE))

ggsave(file.path(prj_path, "figures/benthic_lpi_cover_by_taxa_2021.pdf"), 
       width = 20, height = 20)
```

### Taxa list

```{r taxa_list}
taxa_list <- full_lpi |> 
  group_by(func_group, taxon) |> 
  summarize(avg_cover = round(mean(p_cover),2))

taxa_list |> 
  group_by(func_group) |> 
  summarise(n_taxa = n_distinct(taxon)) |> 
  arrange(desc(n_taxa))
```

